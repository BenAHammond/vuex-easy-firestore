{"version":3,"file":"index.cjs.js","sources":["../node_modules/deepmerge/dist/es.js","../src/utils/deepmerge.js","../src/module/defaultConfig.js","../src/module/state.js","../src/module/mutations.js","../src/utils/copyObj.js","../src/utils/setDefaultValues.js","../src/utils/debounceHelper.js","../src/module/actions.js","../src/utils/checkFillables.js","../src/module/getters.js","../src/module/errorCheck.js","../src/module/index.js","../src/index.js"],"sourcesContent":["var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","import deepmerge from 'deepmerge'\n// import deepmerge from '../../node_modules/deepmerge/dist/es.js'\n\n/**\n * Makes sure to overwrite arrays completely instead of concatenating with a merge(). Usage: merge(arr1, arr2, {arrayOverwrite: true})\n *\n * @returns the latter array passed\n */\nfunction overwriteMerge (destinationArray, sourceArray, options) {\n  return sourceArray\n}\n\nfunction merge (a, b, options) {\n  if (options && options.arrayOverwrite) {\n    return deepmerge(a, b, {arrayMerge: overwriteMerge})\n  }\n  return deepmerge(a, b)\n}\n\nmerge.all = function (array, options) {\n  if (options && options.arrayOverwrite) {\n    return deepmerge.all(array, {arrayMerge: overwriteMerge})\n  }\n  return deepmerge.all(array)\n}\n\nexport default merge\n","\n/**\n * A function executed during the 2 way sync when docs are added/modified/deleted. NEEDS TO EXECUTE FIRST PARAM! You can use this function to do a conditional check on the documents to decide if/when to execute the store update.\n *\n * @param {function} storeUpdateFn this is the function that will make changes to your vuex store. Takes no params.\n * @param {object} store the store for usage with `store.dispatch`, `store.commit`, `store.getters` etc.\n * @param {string} id the doc id returned in `change.doc.id` (see firestore documentation for more info)\n * @param {object} doc the doc returned in `change.doc.data()` (see firestore documentation for more info)\n * @param {string} source of the change. Can be 'local' or 'server'\n */\nfunction syncHook (storeUpdateFn, store, id, doc, source, change) {\n  // throw error if you want to stop the document in your store from being modified\n  // do some stuff\n  storeUpdateFn()\n  // do some stuff\n}\n\nexport default {\n  moduleNameSpace: 'firestore',\n  // this is the vuex module path that will be created\n  docsStateProp: '',\n  // this is the state property where your docs will end up inside the module\n  // when not set your doc's props will be set directly to your vuex module's state\n  firestorePath: '',\n  // this is the firestore collection path to your documents. You can use `{userId}` which will be replaced with `Firebase.auth().uid`\n  firestoreRefType: 'collection', // or 'doc'\n  // depending if what you want to sync is a whole collection or a single doc\n  vuexUserPath: '',\n  // the path where your firebase user gets saved in vuex. Required to be able to have reactivity after login.\n  sync: {\n    type: '2way',\n    // '2way' only ('read only' not yet integrated)\n    where: [], // only applicable on 'collection'\n    orderBy: [], // only applicable on 'collection'\n    defaultValues: {},\n    // About defaultValues:\n    // These are the default properties that will be set on each doc that's synced to the store or comes out of the store.\n    // You HAVE to set all props you want to be reactive on beforehand!\n    // These values are only set when you have items who don't have the props defined in defaultValues upon retrieval\n    // The retrieved document will be deep merged on top of these default values\n    added: syncHook,\n    modified: syncHook,\n    removed: syncHook,\n    // see the syncHook function above to see what you can do\n    // for firestoreRefType: 'doc' only use 'modified' syncHook\n  },\n  fetch: {\n    docLimit: 50, // defaults to 50\n  },\n  insert: {\n    checkCondition: null,\n    // A function where you can check something and force stopping the operation if you return `false`\n    // Eg. checkCondition (doc, docs) { return (doc.something != 'something') },\n    fillables: [],\n    guard: [],\n  },\n  patch: {\n    checkCondition: null,\n    // A function where you can check something and force stopping the operation if you return `false`\n    // Eg. checkCondition (id, fields, docs) { return (doc.something != 'something') },\n    fillables: [],\n    guard: [],\n  },\n  delete: {\n    checkCondition: null,\n    // A function where you can check something and force stopping the operation if you return `false`\n    // Eg. checkCondition (id, docs) { return (doc.something != 'something') },\n  }\n}\n","\nexport default {\n  // user: null,\n  syncStack: {\n    updates: {},\n    deletions: [],\n    inserts: [],\n    debounceTimer: null\n  },\n  retrievedFetchRefs: [],\n  nextFetchRef: null,\n  patching: false,\n  doneFetching: false,\n  stopPatchingTimeout: null,\n}\n","import { defaultMutations } from 'vuex-easy-access'\nimport { isObject } from 'is-what'\nimport merge from '../utils/deepmerge'\n\nconst mutations = {\n  resetSyncStack (state) {\n    state.syncStack = {\n      updates: {},\n      deletions: [],\n      inserts: [],\n      debounceTimer: null\n    }\n  },\n  INSERT_DOC (state, doc) {\n    if (state.firestoreRefType.toLowerCase() === 'doc') return\n    this._vm.$set(state[state.docsStateProp], doc.id, doc)\n  },\n  PATCH_DOC (state, doc) {\n    if (state.firestoreRefType.toLowerCase() === 'doc') {\n      if (!state.docsStateProp) {\n        return Object.keys(doc).forEach(key => {\n          // Merge if exists\n          const newVal = (state[key] === undefined)\n            ? doc[key]\n            : (!isObject(state[key]) || !isObject(doc[key]))\n              ? doc[key]\n              : merge(state[key], doc[key], {arrayOverwrite: true})\n          this._vm.$set(state, key, newVal)\n        })\n      }\n      // state[state.docsStateProp] will always be an empty object by default\n      state[state.docsStateProp] = merge(\n        state[state.docsStateProp],\n        doc,\n        {arrayOverwrite: true}\n      )\n      return\n    }\n    // Merge if exists\n    const newVal = (state[state.docsStateProp][doc.id] === undefined)\n      ? doc\n      : (!isObject(state[state.docsStateProp][doc.id]) || !isObject(doc))\n        ? doc\n        : merge(state[state.docsStateProp][doc.id], doc, {arrayOverwrite: true})\n    this._vm.$set(state[state.docsStateProp], doc.id, newVal)\n  },\n  DELETE_DOC (state, id) {\n    if (state.firestoreRefType.toLowerCase() === 'doc') return\n    this._vm.$delete(state[state.docsStateProp], id)\n  }\n}\n\nexport default function (userMutations = {}, state) {\n  const vuexEasyMutations = defaultMutations(state)\n  return Object.assign({}, vuexEasyMutations, mutations, userMutations)\n}\n","/**\n * copyObj helper\n *\n * @author     Adam Dorling\n * @contact    https://codepen.io/naito\n */\nexport default function copyObj (obj) {\n  let newObj\n  if (typeof obj != 'object') {\n    return obj\n  }\n  if (!obj) {\n    return obj\n  }\n  if ('[object Object]' !== Object.prototype.toString.call(obj) ||\n    '[object Array]' !== Object.prototype.toString.call(obj)\n  ) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n  // Object is an Array\n  if ('[object Array]' === Object.prototype.toString.call(obj)) {\n    newObj = []\n    for (let i = 0, len = obj.length; i < len; i++) {\n      newObj[i] = copyObj(obj[i])\n    }\n    return newObj\n  }\n  // Object is an Object\n  newObj = {}\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      newObj[i] = copyObj(obj[i])\n    }\n  }\n  return newObj\n}\n","import merge from './deepmerge'\n\n/**\n * Sets default values on an object\n *\n * @param {object} obj on which to set the default values\n * @param {object} defaultValues the default values\n */\nexport default function (obj, defaultValues) {\n  return merge(defaultValues, obj, {arrayOverwrite: true})\n}\n","/**\n * debounce helper\n *\n * @author     Adam Dorling\n * @contact    https://codepen.io/naito\n */\n\n// USAGE:\n// let d = startDebounce(1000)\n// d.done.then(_ => handle())\n// d.refresh() // to refresh\n\nexport default function (ms) {\n  let startTime = Date.now()\n  const done = new Promise((resolve, reject) => {\n    const interval = setInterval(_ => {\n      const now = Date.now()\n      const deltaT = now - startTime\n      if (deltaT >= ms) {\n        clearInterval(interval)\n        resolve(true)\n      }\n    }, 10)\n  })\n  const refresh = () => (startTime = Date.now())\n  return { done, refresh }\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { isArray, isString } from 'is-what'\nimport merge from '../utils/deepmerge'\nimport copyObj from '../utils/copyObj'\nimport setDefaultValues from '../utils/setDefaultValues'\nimport startDebounce from '../utils/debounceHelper'\n\nconst actions = {\n  patchDoc (\n    {state, getters, commit, dispatch},\n    {id = '', ids = [], field = '', fields = []} = {ids: [], fields: []}\n  ) {\n    // 0. payload correction (only arrays)\n    if (!isArray(ids) || !isArray(fields)) return console.log('ids, fields need to be arrays')\n    if (!isString(field)) return console.log('field needs to be a string')\n    if (id) ids.push(id)\n    if (field) fields.push(field)\n\n    // 1. Prepare for patching\n    let syncStackItems = getters.prepareForPatch(ids, fields)\n\n    // 2. Push to syncStack\n    Object.keys(syncStackItems).forEach(id => {\n      const newVal = (!state.syncStack.updates[id])\n        ? syncStackItems[id]\n        : merge(\n            state.syncStack.updates[id],\n            syncStackItems[id],\n            {arrayOverwrite: true}\n          )\n      state.syncStack.updates[id] = newVal\n    })\n\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  deleteDoc ({state, getters, commit, dispatch},\n  ids = []) {\n    // 0. payload correction (only arrays)\n    if (!isArray(ids)) ids = [ids]\n\n    // 1. Prepare for patching\n    const syncStackIds = getters.prepareForDeletion(ids)\n\n    // 2. Push to syncStack\n    const deletions = state.syncStack.deletions.concat(syncStackIds)\n    commit('SET_SYNCSTACK.DELETIONS', deletions)\n\n    if (!state.syncStack.deletions.length) return\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  insertDoc ({state, getters, commit, dispatch},\n  docs = []) {\n    // 0. payload correction (only arrays)\n    if (!isArray(docs)) docs = [docs]\n\n    // 1. Prepare for patching\n    const syncStack = getters.prepareForInsert(docs)\n\n    // 2. Push to syncStack\n    const inserts = state.syncStack.inserts.concat(syncStack)\n    commit('SET_SYNCSTACK.INSERTS', inserts)\n\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  handleSyncStackDebounce ({state, commit, dispatch, getters}) {\n    if (!getters.signedIn) return false\n    if (!state.syncStack.debounceTimer) {\n      const debounceTimer = startDebounce(1000)\n      debounceTimer.done.then(_ => dispatch('batchSync'))\n      commit('SET_SYNCSTACK.DEBOUNCETIMER', debounceTimer)\n    }\n    state.syncStack.debounceTimer.refresh()\n  },\n  batchSync ({getters, commit, dispatch, state}) {\n    const collectionMode = getters.collectionMode\n    const dbRef = getters.dbRef\n    let batch = Firebase.firestore().batch()\n    let count = 0\n    // Add 'updateds' to batch\n    let updatesOriginal = copyObj(state.syncStack.updates)\n    let updates = Object.keys(updatesOriginal).map(k => {\n      let fields = updatesOriginal[k]\n      return {id: k, fields}\n    })\n    // Check if there are more than 500 batch items already\n    if (updates.length >= 500) {\n      // Batch supports only until 500 items\n      count = 500\n      let updatesOK = updates.slice(0, 500)\n      let updatesLeft = updates.slice(500, -1)\n      // Put back the remaining items over 500\n      state.syncStack.updates = updatesLeft.reduce((carry, item) => {\n        carry[item.id] = item\n        delete item.id\n        return carry\n      }, {})\n      updates = updatesOK\n    } else {\n      state.syncStack.updates = {}\n      count = updates.length\n    }\n    // Add to batch\n    updates.forEach(item => {\n      let id = item.id\n      let docRef = (collectionMode) ? dbRef.doc(id) : dbRef\n      let fields = item.fields\n      batch.update(docRef, fields)\n    })\n    // Add 'deletions' to batch\n    let deletions = copyObj(state.syncStack.deletions)\n    // Check if there are more than 500 batch items already\n    if (count >= 500) {\n      // already at 500 or more, leave items in syncstack, and don't add anything to batch\n      deletions = []\n    } else {\n      // Batch supports only until 500 items\n      let deletionsAmount = 500 - count\n      let deletionsOK = deletions.slice(0, deletionsAmount)\n      let deletionsLeft = deletions.slice(deletionsAmount, -1)\n      // Put back the remaining items over 500\n      commit('SET_SYNCSTACK.DELETIONS', deletionsLeft)\n      count = count + deletionsOK.length\n      // Define the items we'll add below\n      deletions = deletionsOK\n    }\n    // Add to batch\n    deletions.forEach(id => {\n      let docRef = dbRef.doc(id)\n      batch.delete(docRef)\n    })\n    // Add 'inserts' to batch\n    let inserts = copyObj(state.syncStack.inserts)\n    // Check if there are more than 500 batch items already\n    if (count >= 500) {\n      // already at 500 or more, leave items in syncstack, and don't add anything to batch\n      inserts = []\n    } else {\n      // Batch supports only until 500 items\n      let insertsAmount = 500 - count\n      let insertsOK = inserts.slice(0, insertsAmount)\n      let insertsLeft = inserts.slice(insertsAmount, -1)\n      // Put back the remaining items over 500\n      commit('SET_SYNCSTACK.INSERTS', insertsLeft)\n      count = count + insertsOK.length\n      // Define the items we'll add below\n      inserts = insertsOK\n    }\n    // Add to batch\n    inserts.forEach(item => {\n      let newRef = getters.dbRef.doc(item.id)\n      batch.set(newRef, item)\n    })\n    // Commit the batch:\n    // console.log(`[batchSync] START:\n    //   ${Object.keys(updates).length} updates,\n    //   ${deletions.length} deletions,\n    //   ${inserts.length} inserts`\n    // )\n    dispatch('_startPatching')\n    commit('SET_SYNCSTACK.DEBOUNCETIMER', null)\n    return new Promise((resolve, reject) => {\n      batch.commit()\n      .then(res => {\n        console.log(`[batchSync] RESOLVED:`, res, `\n          updates: `, Object.keys(updates).length ? updates : {}, `\n          deletions: `, deletions.length ? deletions : [], `\n          inserts: `, inserts.length ? inserts : []\n        )\n        let remainingSyncStack = Object.keys(state.syncStack.updates).length\n          + state.syncStack.deletions.length\n          + state.syncStack.inserts.length\n        if (remainingSyncStack) { dispatch('batchSync') }\n        dispatch('_stopPatching')\n        return resolve()\n        // // Fetch the item if it was added as an Archived item:\n        // if (item.archived) {\n          //   get_ters.dbRef.doc(res.id).get()\n          //   .then(doc => {\n            //     let tempId = doc.data().id\n            //     let id = doc.id\n            //     let item = doc.data()\n            //     item.id = id\n            //     console.log('retrieved Archived new item: ', id, item)\n            //     dispatch('newItemFromServer', {item, tempId})\n            //   })\n            // }\n      }).catch(error => {\n        commit('SET_PATCHING', 'error')\n        commit('SET_SYNCSTACK.DEBOUNCETIMER', null)\n        return reject()\n      })\n    })\n  },\n  fetch (\n    {state, getters, commit},\n    {whereFilters = [], orderBy = []} = {whereFilters: [], orderBy: []}\n    // whereFilters: [['archived', '==', true]]\n    // orderBy: ['done_date', 'desc']\n  ) {\n    return new Promise((resolve, reject) => {\n      console.log('[fetch] starting')\n      if (!getters.signedIn) return resolve()\n      if (state.doneFetching) {\n        console.log('done fetching')\n        return resolve('fetchedAll')\n      }\n      // attach fetch filters\n      let fetchRef\n      if (state.nextFetchRef) {\n        // get next ref if saved in state\n        fetchRef = state.nextFetchRef\n      } else {\n        // apply where filters and orderBy\n        fetchRef = getters.dbRef\n        whereFilters.forEach(paramsArr => {\n          fetchRef = fetchRef.where(...paramsArr)\n        })\n        if (orderBy.length) {\n          fetchRef = fetchRef.orderBy(...orderBy)\n        }\n      }\n      fetchRef = fetchRef.limit(state.fetch.docLimit)\n      // Stop if all records already fetched\n      if (state.retrievedFetchRefs.includes(fetchRef)) {\n        console.log('Already retrieved this part.')\n        return resolve()\n      }\n      // make fetch request\n      fetchRef.get()\n      .then(querySnapshot => {\n        const docs = querySnapshot.docs\n        if (docs.length === 0) {\n          commit('SET_DONEFETCHING', true)\n          return resolve('fetchedAll')\n        }\n        if (docs.length < state.fetch.docLimit) {\n          commit('SET_DONEFETCHING', true)\n        }\n        commit('PUSH_RETRIEVEDFETCHREFS', fetchRef)\n        // Get the last visible document\n        resolve(querySnapshot)\n        const lastVisible = docs[docs.length - 1]\n        // get the next records.\n        const next = fetchRef.startAfter(lastVisible)\n        commit('SET_NEXTFETCHREF', next)\n      }).catch(error => {\n        console.log(error)\n        return reject(error)\n      })\n    })\n  },\n  serverUpdate ({commit}, {change, id, doc = {}}) {\n    doc.id = id\n    switch (change) {\n      case 'added':\n        commit('INSERT_DOC', doc)\n        break\n      case 'removed':\n        commit('DELETE_DOC', id)\n        break\n      default:\n        commit('PATCH_DOC', doc)\n        break\n    }\n  },\n  openDBChannel ({getters, state, commit, dispatch}) {\n    const collectionMode = getters.collectionMode\n    let dbRef = getters.dbRef\n    // apply where filters and orderBy\n    if (state.firestoreRefType.toLowerCase() !== 'doc') {\n      state.sync.where.forEach(paramsArr => {\n        dbRef = dbRef.where(...paramsArr)\n      })\n      if (state.sync.orderBy.length) {\n        dbRef = dbRef.orderBy(...state.sync.orderBy)\n      }\n    }\n    // define handleDoc()\n    function handleDoc (change, id, doc, source) {\n      change = (!change) ? 'modified' : change.type\n      // define storeUpdateFn()\n      function storeUpdateFn () {\n        return dispatch('serverUpdate', {change, id, doc})\n      }\n      // get user set sync hook function\n      const syncHookFn = state.sync[change]\n      if (syncHookFn) {\n        syncHookFn(storeUpdateFn, this, id, doc, source)\n      } else {\n        storeUpdateFn()\n      }\n    }\n    // make a promise\n    return new Promise ((resolve, reject) => {\n      dbRef\n      .onSnapshot(querySnapshot => {\n        let source = querySnapshot.metadata.hasPendingWrites ? 'local' : 'server'\n        if (!collectionMode) {\n          const doc = setDefaultValues(querySnapshot.data(), state.sync.defaultValues)\n          if (source === 'local') return resolve()\n          handleDoc(null, null, doc, source)\n          return resolve()\n        }\n        querySnapshot.docChanges().forEach(change => {\n          // Don't do anything for local modifications & removals\n          if (source === 'local' &&\n            (change.type === 'modified' || change.type === 'removed')\n          ) {\n            return resolve()\n          }\n          const id = change.doc.id\n          const doc = (change.type === 'added')\n            ? setDefaultValues(change.doc.data(), state.sync.defaultValues)\n            : change.doc.data()\n          handleDoc(change, id, doc, source)\n          return resolve()\n        })\n      }, error => {\n        commit('SET_PATCHING', 'error')\n        return reject(error)\n      })\n    })\n  },\n  set ({commit, dispatch, getters, state}, doc) {\n    if (!doc) return\n    if (!getters.collectionMode) {\n      return dispatch('patch', doc)\n    }\n    if (!doc.id || !state[state.docsStateProp][doc.id]) {\n      return dispatch('insert', doc)\n    }\n    return dispatch('patch', doc)\n  },\n  insert ({commit, dispatch, getters}, doc) {\n    if (!doc) return\n    if (!doc.id) doc.id = getters.dbRef.doc().id\n    commit('INSERT_DOC', doc)\n    return dispatch('insertDoc', doc)\n  },\n  patch ({commit, state, dispatch, getters}, doc) {\n    if (!doc) return\n    if (!doc.id && getters.collectionMode) return\n    commit('PATCH_DOC', doc)\n    return dispatch('patchDoc', {id: doc.id, fields: Object.keys(doc)})\n  },\n  delete ({commit, dispatch, getters}, id) {\n    commit('DELETE_DOC', id)\n    return dispatch('deleteDoc', id)\n  },\n  _stopPatching ({state, commit}) {\n    if (state.stopPatchingTimeout) { clearTimeout(state.stopPatchingTimeout) }\n    state.stopPatchingTimeout = setTimeout(_ => { commit('SET_PATCHING', false) }, 300)\n  },\n  _startPatching ({state, commit}) {\n    if (state.stopPatchingTimeout) { clearTimeout(state.stopPatchingTimeout) }\n    commit('SET_PATCHING', true)\n  }\n}\n\nexport default function (userActions = {}) {\n  return Object.assign({}, actions, userActions)\n}\n","\nimport { isObject } from 'is-what'\n/**\n * Checks all props of an object and deletes guarded and non-fillables.\n *\n * @param {object}  obj       the target object to check\n * @param {array}   fillables an array of strings, with the props which should be allowed on returned object\n * @param {array}   guard     an array of strings, with the props which should NOT be allowed on returned object\n *\n * @returns {object} the cleaned object after deleting guard and non-fillables\n */\nexport default function (obj, fillables = [], guard = []) {\n  if (!isObject(obj)) return obj\n  if (fillables.length) {\n    Object.keys(obj).forEach(key => {\n      if (!fillables.includes(key)) {\n        delete obj[key]\n      }\n    })\n  }\n  guard.forEach(key => {\n    delete obj[key]\n  })\n  return obj\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport copyObj from '../utils/copyObj'\nimport { getDeepRef } from 'vuex-easy-access'\nimport checkFillables from '../utils/checkFillables'\n\nconst getters = {\n  signedIn: (state, getters, rootState, rootGetters) => {\n    const user = getDeepRef(rootState, state.vuexUserPath)\n    return (user !== null)\n  },\n  dbRef: (state, getters, rootState, rootGetters) => {\n    if (!getters.signedIn) return false\n    const userId = Firebase.auth().currentUser.uid\n    const path = state.firestorePath.replace('{userId}', userId)\n    return (state.firestoreRefType.toLowerCase() === 'collection')\n      ? Firebase.firestore().collection(path)\n      : Firebase.firestore().doc(path)\n  },\n  storeRef: (state, getters, rootState) => {\n    const path = (state.docsStateProp)\n      ? `${state.moduleNameSpace}/${state.docsStateProp}`\n      : state.moduleNameSpace\n    return getDeepRef(rootState, path)\n  },\n  collectionMode: (state, getters, rootState) => {\n    return (state.firestoreRefType.toLowerCase() === 'collection')\n  },\n  prepareForPatch: (state, getters, rootState, rootGetters) =>\n  (ids = [], fields = []) => {\n    // get relevant data from the storeRef\n    const collectionMode = getters.collectionMode\n    if (!collectionMode) ids.push('singleDoc')\n    // returns {object} -> {id: data}\n    return ids.reduce((carry, id) => {\n      // Accept an extra condition to check\n      const check = state.patch.checkCondition\n      if (check && !check(id, fields, getters.storeRef)) return carry\n\n      let patchData = {}\n      // Patch specific fields only\n      if (fields.length) {\n        fields.forEach(field => {\n          patchData[field] = (collectionMode)\n            ? getters.storeRef[id][field]\n            : getters.storeRef[field]\n        })\n      // Patch the whole item\n      } else {\n        patchData = (collectionMode)\n          ? copyObj(getters.storeRef[id])\n          : copyObj(getters.storeRef)\n        patchData = checkFillables(patchData, state.patch.fillables, state.patch.guard)\n      }\n      patchData.updated_at = Firebase.firestore.FieldValue.serverTimestamp()\n      carry[id] = patchData\n      return carry\n    }, {})\n  },\n  prepareForDeletion: (state, getters, rootState, rootGetters) =>\n  (ids = []) => {\n    return ids.reduce((carry, id) => {\n      // Accept an extra condition to check\n      let check = state.delete.checkCondition\n      if (check && !check(id, getters.storeRef)) return carry\n      carry.push(id)\n      return carry\n    }, [])\n  },\n  prepareForInsert: (state, getters, rootState, rootGetters) =>\n  (items = []) => {\n    items = copyObj(items)\n    return items.reduce((carry, item) => {\n      // Accept an extra condition to check\n      let check = state.insert.checkCondition\n      if (check && !check(item, getters.storeRef)) return carry\n\n      item = checkFillables(item, state.insert.fillables, state.insert.guard)\n      item.created_at = Firebase.firestore.FieldValue.serverTimestamp()\n      item.created_by = rootGetters['user/id']\n      carry.push(item)\n      return carry\n    }, [])\n  }\n}\n\nexport default function (userGetters = {}) {\n  return Object.assign({}, getters, userGetters)\n}\n","\nexport default function errorCheck (config) {\n  let reqProps = ['firestorePath', 'vuexUserPath']\n  reqProps.forEach(prop => {\n    console.error(`Missing ${prop} from your config!`)\n    return false\n  })\n  if (/(\\.|\\/)/.test(config.docsStateProp)) {\n    console.error(`docsStateProp must only include letters from [a-z]`)\n    return false\n  }\n  if (/\\./.test(config.moduleNameSpace)) {\n    console.error(`moduleNameSpace must only include letters from [a-z] and forward slashes '/'`)\n    return false\n  }\n  return true\n}\n","import merge from '../utils/deepmerge'\n// store\nimport defaultConfig from './defaultConfig'\nimport initialState from './state'\nimport iniMutations from './mutations'\nimport iniActions from './actions'\nimport iniGetters from './getters'\nimport errorCheck from './errorCheck'\n\nconst vuexBase = {state: null, mutations: null, actions: null, getters: null}\n\n/**\n * A function that returns a vuex module object with seamless 2-way sync for firestore.\n *\n * @param {object} userConfig Takes a config object as per ...\n * @returns {object} the module ready to be included in your vuex store\n */\nexport default function (userConfig) {\n  const conf = merge(vuexBase, userConfig, {arrayOverwrite: true})\n  if (!errorCheck(conf)) return\n  const userState = conf.state\n  const userMutations = conf.mutations\n  const userActions = conf.actions\n  const userGetters = conf.getters\n  delete conf.state\n  delete conf.mutations\n  delete conf.actions\n  delete conf.getters\n\n  const docContainer = {}\n  if (conf.docsStateProp) docContainer[conf.docsStateProp] = {}\n  const state = merge.all([initialState, defaultConfig, userState, conf, docContainer], {arrayOverwrite: true})\n\n  return {\n    namespaced: true,\n    state,\n    mutations: iniMutations(userMutations, merge(initialState, userState)),\n    actions: iniActions(userActions),\n    getters: iniGetters(userGetters)\n  }\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { getKeysFromPath } from 'vuex-easy-access'\nimport { isArray } from 'is-what'\nimport iniModule from './module/index'\n\nexport default function createEasyFirestore (userConfig) {\n  return store => {\n    // Get an array of config files\n    if (!isArray(userConfig)) userConfig = [userConfig]\n    // Create a module for each config file\n    userConfig.forEach(config => {\n      const moduleNameSpace = getKeysFromPath(config.moduleNameSpace)\n      store.registerModule(moduleNameSpace, iniModule(config))\n    })\n    store.setDoc = (path, payload) => {\n      return store.dispatch(path + '/setDoc', payload)\n    }\n    store.insert = (path, payload) => {\n      return store.dispatch(path + '/insert', payload)\n    }\n    store.patch = (path, payload) => {\n      return store.dispatch(path + '/patch', payload)\n    }\n    store.delete = (path, payload) => {\n      return store.dispatch(path + '/delete', payload)\n    }\n  }\n}\n"],"names":["overwriteMerge","destinationArray","sourceArray","options","merge","a","b","arrayOverwrite","deepmerge","arrayMerge","all","array","syncHook","storeUpdateFn","store","id","doc","source","change","mutations","state","syncStack","firestoreRefType","toLowerCase","_vm","$set","docsStateProp","Object","keys","forEach","newVal","key","undefined","isObject","$delete","userMutations","vuexEasyMutations","defaultMutations","assign","copyObj","obj","newObj","prototype","toString","call","JSON","parse","stringify","i","len","length","hasOwnProperty","defaultValues","ms","startTime","Date","now","done","Promise","resolve","reject","interval","setInterval","deltaT","refresh","actions","getters","commit","dispatch","ids","fields","field","isArray","console","log","isString","push","syncStackItems","prepareForPatch","updates","syncStackIds","prepareForDeletion","deletions","concat","docs","prepareForInsert","inserts","signedIn","debounceTimer","startDebounce","then","collectionMode","dbRef","batch","Firebase","firestore","count","updatesOriginal","map","k","updatesOK","slice","updatesLeft","reduce","carry","item","docRef","update","deletionsAmount","deletionsOK","deletionsLeft","delete","insertsAmount","insertsOK","insertsLeft","newRef","set","res","remainingSyncStack","catch","whereFilters","orderBy","doneFetching","fetchRef","nextFetchRef","where","paramsArr","limit","fetch","docLimit","retrievedFetchRefs","includes","get","querySnapshot","lastVisible","next","startAfter","error","sync","handleDoc","type","syncHookFn","onSnapshot","metadata","hasPendingWrites","setDefaultValues","data","docChanges","stopPatchingTimeout","setTimeout","userActions","fillables","guard","rootState","rootGetters","user","getDeepRef","vuexUserPath","userId","auth","currentUser","uid","path","firestorePath","replace","collection","moduleNameSpace","check","patch","checkCondition","storeRef","patchData","checkFillables","updated_at","FieldValue","serverTimestamp","items","insert","created_at","created_by","userGetters","errorCheck","config","reqProps","prop","test","vuexBase","userConfig","conf","userState","docContainer","initialState","defaultConfig","iniMutations","iniActions","iniGetters","createEasyFirestore","getKeysFromPath","registerModule","iniModule","setDoc","payload"],"mappings":"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"}