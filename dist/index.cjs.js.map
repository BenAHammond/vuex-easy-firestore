{"version":3,"file":"index.cjs.js","sources":["../src/utils/nanomerge.js","../src/utils/deepmerge.js","../src/module/defaultConfig.js","../src/module/state.js","../src/module/mutations.js","../src/utils/copyObj.js","../src/utils/setDefaultValues.js","../src/utils/debounceHelper.js","../src/utils/objectFlattenToPaths.js","../src/module/actions.js","../src/utils/checkFillables.js","../src/module/getters.js","../src/module/errorCheck.js","../src/module/index.js","../src/index.js"],"sourcesContent":["var nanoclone = require('nanoclone').default\n\nfunction toArray (object) {\n  var result = []\n\n  for (var i = 0; i < object.length; ++i) {\n    result.push(object[i])\n  }\n\n  return result\n}\n\nvar types = [\n  {\n    name: 'primitive',\n\n    is: function (el) {\n      var type = typeof el\n\n      return (type === 'number' || type === 'string' || type === 'boolean')\n    },\n\n    default: 'default',\n\n    merge: {\n      default: function (merger, a, b) {\n        return b\n      }\n    }\n  },\n\n  {\n    name: 'object',\n\n    is: function (el) {\n      return el !== null && (typeof el === 'object')\n    },\n\n    default: 'deep',\n\n    merge: {\n      deep: function (merger, a, b) {\n        var result = {}\n\n        var keys = {\n          a: Object.keys(a),\n          b: Object.keys(b)\n        }\n\n        keys.a.concat(keys.b).forEach(function (key) {\n          result[key] = merger(a[key], b[key])\n        })\n\n        return result\n      }\n    }\n  },\n\n  {\n    name: 'array',\n\n    is: function (el) {\n      return Array.isArray(el)\n    },\n\n    default: 'replace',\n\n    merge: {\n      merge: function (merger, a, b) {\n        var result = []\n\n        for (var i = 0; i < Math.max(a.length, b.length); ++i) {\n          result.push(merger(a[i], b[i]))\n        }\n\n        return result\n      },\n\n      replace: function (merger, a, b) {\n        return nanoclone(b)\n      },\n\n      concat: function (merger, a, b) {\n        return (([]).concat(a)).concat(b)\n      }\n    }\n  }\n]\n\nfunction merge (config) {\n  if (!config) {\n    config = {}\n  }\n\n  config = {\n    strategy: config.strategy || {}\n  }\n\n  function determineType (a, b) {\n    for (var i = types.length - 1; i >= 0; --i) {\n      var type = types[i]\n\n      if (type.is(a) && type.is(b)) {\n        return type\n      } else if (type.is(a) || type.is(b)) {\n        break\n      }\n    }\n\n    return null\n  }\n\n  function merger (a, b) {\n    if (b === void 0) {\n      return nanoclone(a)\n    }\n\n    var type = determineType(a, b)\n\n    if (!type) {\n      return nanoclone(b)\n    }\n\n    var strategy = config.strategy[type.name] || type.default\n\n    return type.merge[strategy](merger, a, b)\n  }\n\n  return function () {\n    var elements = toArray(arguments)\n\n    return elements.reduceRight(function (result, element) {\n      return merger(element, result)\n    })\n  }\n}\n\nfunction wrapper () {\n  var args = toArray(arguments)\n\n  // custom config\n  if (args.length === 1) {\n    return merge(args[0])\n  }\n\n  return merge().apply(null, args)\n}\n\nexport default wrapper\n// module.exports = wrapper\n","import { isObject } from 'is-what'\n// import deepmerge from 'nanomerge'\nimport deepmerge from './nanomerge'\n\nfunction merge (...params) {\n  let l = params.length\n  for (l; l > 0; l--) {\n    const item = params[l - 1]\n    if (!isObject(item)) {\n      console.error('trying to merge a non-object: ', item)\n      return item\n    }\n  }\n  return deepmerge(...params)\n}\n\nexport default merge\n","\nexport default {\n  firestorePath: '',\n    // The path to a collection or doc in firestore. You can use `{userId}` which will be replaced with the user Id.\n  firestoreRefType: '',\n    // `'collection'` or `'doc'`. Depending on your `firestorePath`.\n  moduleName: '',\n    // The module name. Can be nested, eg. `'user/items'`\n  statePropName: '',\n    // The name of the property where the docs or doc will be synced to. If left blank it will be synced on the state of the module. (Please see [Sync directly to module state](#sync-directly-to-module-state) for more info)\n\n  // Related to the 2-way sync:\n  sync: {\n    where: [],\n    orderBy: [],\n    fillables: [],\n    guard: [],\n    // HOOKS for local changes:\n    insertHook: function (updateStore, doc, store) { return updateStore(doc) },\n    patchHook: function (updateStore, doc, store) { return updateStore(doc) },\n    deleteHook: function (updateStore, id, store) { return updateStore(id) },\n  },\n\n  // When items on the server side are changed:\n  serverChange: {\n    defaultValues: {},\n    // HOOKS for changes on SERVER:\n    addedHook: function (updateStore, doc, id, store, source, change) { return updateStore(doc) },\n    modifiedHook: function (updateStore, doc, id, store, source, change) { return updateStore(doc) },\n    removedHook: function (updateStore, doc, id, store, source, change) { return updateStore(doc) },\n  },\n\n  // When items are fetched through `dispatch('module/fetch', filters)`.\n  fetch: {\n    // The max amount of documents to be fetched. Defaults to 50.\n    docLimit: 50,\n  },\n\n  // You can also add custom state/getters/mutations/actions. These will be added to your module.\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {},\n}\n","\nexport default {\n  _sync: {\n    signedIn: false,\n    patching: false,\n    syncStack: {\n      updates: {},\n      deletions: [],\n      inserts: [],\n      debounceTimer: null\n    },\n    fetched: [],\n    stopPatchingTimeout: null\n  }\n}\n","import { isObject } from 'is-what'\nimport merge from '../utils/deepmerge'\n\nconst mutations = {\n  resetSyncStack (state) {\n    state._sync.syncStack = {\n      updates: {},\n      deletions: [],\n      inserts: [],\n      debounceTimer: null\n    }\n  },\n  INSERT_DOC (state, doc) {\n    if (state._conf.firestoreRefType.toLowerCase() === 'doc') return\n    if (state._conf.statePropName) {\n      this._vm.$set(state[state._conf.statePropName], doc.id, doc)\n    } else {\n      this._vm.$set(state, doc.id, doc)\n    }\n  },\n  PATCH_DOC (state, doc) {\n    // When patching in single 'doc' mode\n    if (state._conf.firestoreRefType.toLowerCase() === 'doc') {\n      // if no target prop is the state\n      if (!state._conf.statePropName) {\n        return Object.keys(doc).forEach(key => {\n          // Merge if exists\n          const newVal = (state[key] === undefined || !isObject(state[key]) || !isObject(doc[key]))\n            ? doc[key]\n            : merge(state[key], doc[key])\n          this._vm.$set(state, key, newVal)\n        })\n      }\n      // state[state._conf.statePropName] will always be an empty object by default\n      state[state._conf.statePropName] = merge(state[state._conf.statePropName], doc)\n      return\n    }\n    // Patching in 'collection' mode\n    // get the doc ref\n    const docRef = (state._conf.statePropName)\n      ? state[state._conf.statePropName][doc.id]\n      : state[doc.id]\n    // Merge if exists\n    const newVal = (docRef === undefined || !isObject(docRef) || !isObject(doc))\n      ? doc\n      : merge(docRef, doc)\n    if (state._conf.statePropName) {\n      this._vm.$set(state[state._conf.statePropName], doc.id, newVal)\n    } else {\n      this._vm.$set(state, doc.id, newVal)\n    }\n  },\n  DELETE_DOC (state, id) {\n    if (state._conf.firestoreRefType.toLowerCase() === 'doc') return\n    if (state._conf.statePropName) {\n      this._vm.$delete(state[state._conf.statePropName], id)\n    } else {\n      this._vm.$delete(state, id)\n    }\n  }\n}\n\nexport default function (userMutations = {}, state) {\n  return Object.assign({}, mutations, userMutations)\n}\n","/**\n * copyObj helper\n *\n * @author     Adam Dorling\n * @contact    https://codepen.io/naito\n */\nexport default function copyObj (obj) {\n  let newObj\n  if (typeof obj != 'object') {\n    return obj\n  }\n  if (!obj) {\n    return obj\n  }\n  if ('[object Object]' !== Object.prototype.toString.call(obj) ||\n    '[object Array]' !== Object.prototype.toString.call(obj)\n  ) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n  // Object is an Array\n  if ('[object Array]' === Object.prototype.toString.call(obj)) {\n    newObj = []\n    for (let i = 0, len = obj.length; i < len; i++) {\n      newObj[i] = copyObj(obj[i])\n    }\n    return newObj\n  }\n  // Object is an Object\n  newObj = {}\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      newObj[i] = copyObj(obj[i])\n    }\n  }\n  return newObj\n}\n","import merge from './deepmerge'\n\n/**\n * Sets default values on an object\n *\n * @param {object} obj on which to set the default values\n * @param {object} defaultValues the default values\n */\nexport default function (obj, defaultValues) {\n  return merge(defaultValues, obj)\n}\n","/**\n * debounce helper\n *\n * @author     Adam Dorling\n * @contact    https://codepen.io/naito\n */\n\n// USAGE:\n// let d = startDebounce(1000)\n// d.done.then(_ => handle())\n// d.refresh() // to refresh\n\nexport default function (ms) {\n  let startTime = Date.now()\n  const done = new Promise((resolve, reject) => {\n    const interval = setInterval(_ => {\n      const now = Date.now()\n      const deltaT = now - startTime\n      if (deltaT >= ms) {\n        clearInterval(interval)\n        resolve(true)\n      }\n    }, 10)\n  })\n  const refresh = () => (startTime = Date.now())\n  return { done, refresh }\n}\n","import { isObject } from 'is-what'\n\nfunction retrievePaths (object, path, result) {\n  if (!isObject(object) || !Object.keys(object).length) {\n    if (!path) return object\n    result[path] = object\n    return result\n  }\n  return Object.keys(object).reduce((carry, key) => {\n    const pathUntilNow = (path)\n      ? path + '.'\n      : ''\n    const newPath = pathUntilNow + key\n    const extra = retrievePaths(object[key], newPath, result)\n    return Object.assign(carry, extra)\n  }, {})\n}\n\nexport default function (object) {\n  const result = {}\n  return retrievePaths(object, null, result)\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport { isArray, isString } from 'is-what'\nimport merge from '../utils/deepmerge'\nimport copyObj from '../utils/copyObj'\nimport setDefaultValues from '../utils/setDefaultValues'\nimport startDebounce from '../utils/debounceHelper'\nimport flattenToPaths from '../utils/objectFlattenToPaths'\n\nconst actions = {\n  patchDoc (\n    {state, getters, commit, dispatch},\n    {id = '', ids = [], doc} = {ids: [], doc: {}}\n  ) {\n    // 0. payload correction (only arrays)\n    if (!isArray(ids)) return console.log('ids needs to be an array')\n    if (id) ids.push(id)\n    if (doc.id) delete doc.id\n\n    // 1. Prepare for patching\n    let syncStackItems = getters.prepareForPatch(ids, doc)\n\n    // 2. Push to syncStack\n    Object.keys(syncStackItems).forEach(id => {\n      const newVal = (!state._sync.syncStack.updates[id])\n        ? syncStackItems[id]\n        : merge(state._sync.syncStack.updates[id],\n                syncStackItems[id])\n      state._sync.syncStack.updates[id] = newVal\n    })\n\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  deleteDoc ({state, getters, commit, dispatch},\n  ids = []) {\n    // 0. payload correction (only arrays)\n    if (!isArray(ids)) ids = [ids]\n\n    // 1. Prepare for patching\n    const syncStackIds = getters.prepareForDeletion(ids)\n\n    // 2. Push to syncStack\n    const deletions = state._sync.syncStack.deletions.concat(syncStackIds)\n    state._sync.syncStack.deletions = deletions\n\n    if (!state._sync.syncStack.deletions.length) return\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  insertDoc ({state, getters, commit, dispatch},\n  docs = []) {\n    // 0. payload correction (only arrays)\n    if (!isArray(docs)) docs = [docs]\n\n    // 1. Prepare for patching\n    const syncStack = getters.prepareForInsert(docs)\n\n    // 2. Push to syncStack\n    const inserts = state._sync.syncStack.inserts.concat(syncStack)\n    state._sync.syncStack.inserts = inserts\n\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  handleSyncStackDebounce ({state, commit, dispatch, getters}) {\n    if (!getters.signedIn) return false\n    if (!state._sync.syncStack.debounceTimer) {\n      const debounceTimer = startDebounce(1000)\n      debounceTimer.done.then(_ => dispatch('batchSync'))\n      state._sync.syncStack.debounceTimer = debounceTimer\n    }\n    state._sync.syncStack.debounceTimer.refresh()\n  },\n  batchSync ({getters, commit, dispatch, state}) {\n    const collectionMode = getters.collectionMode\n    const dbRef = getters.dbRef\n    let batch = Firebase.firestore().batch()\n    let count = 0\n    // Add 'updateds' to batch\n    let updatesOriginal = copyObj(state._sync.syncStack.updates)\n    let updates = Object.keys(updatesOriginal).map(k => {\n      let fields = updatesOriginal[k]\n      return {id: k, fields}\n    })\n    // Check if there are more than 500 batch items already\n    if (updates.length >= 500) {\n      // Batch supports only until 500 items\n      count = 500\n      let updatesOK = updates.slice(0, 500)\n      let updatesLeft = updates.slice(500, -1)\n      // Put back the remaining items over 500\n      state._sync.syncStack.updates = updatesLeft.reduce((carry, item) => {\n        carry[item.id] = item\n        delete item.id\n        return carry\n      }, {})\n      updates = updatesOK\n    } else {\n      state._sync.syncStack.updates = {}\n      count = updates.length\n    }\n    // Add to batch\n    updates.forEach(item => {\n      let id = item.id\n      let docRef = (collectionMode) ? dbRef.doc(id) : dbRef\n      let fields = flattenToPaths(item.fields)\n      console.log('fields → ', fields)\n      batch.update(docRef, fields)\n    })\n    // Add 'deletions' to batch\n    let deletions = copyObj(state._sync.syncStack.deletions)\n    // Check if there are more than 500 batch items already\n    if (count >= 500) {\n      // already at 500 or more, leave items in syncstack, and don't add anything to batch\n      deletions = []\n    } else {\n      // Batch supports only until 500 items\n      let deletionsAmount = 500 - count\n      let deletionsOK = deletions.slice(0, deletionsAmount)\n      let deletionsLeft = deletions.slice(deletionsAmount, -1)\n      // Put back the remaining items over 500\n      state._sync.syncStack.deletions = deletionsLeft\n      count = count + deletionsOK.length\n      // Define the items we'll add below\n      deletions = deletionsOK\n    }\n    // Add to batch\n    deletions.forEach(id => {\n      let docRef = dbRef.doc(id)\n      batch.delete(docRef)\n    })\n    // Add 'inserts' to batch\n    let inserts = copyObj(state._sync.syncStack.inserts)\n    // Check if there are more than 500 batch items already\n    if (count >= 500) {\n      // already at 500 or more, leave items in syncstack, and don't add anything to batch\n      inserts = []\n    } else {\n      // Batch supports only until 500 items\n      let insertsAmount = 500 - count\n      let insertsOK = inserts.slice(0, insertsAmount)\n      let insertsLeft = inserts.slice(insertsAmount, -1)\n      // Put back the remaining items over 500\n      state._sync.syncStack.inserts = insertsLeft\n      count = count + insertsOK.length\n      // Define the items we'll add below\n      inserts = insertsOK\n    }\n    // Add to batch\n    inserts.forEach(item => {\n      let newRef = getters.dbRef.doc(item.id)\n      batch.set(newRef, item)\n    })\n    // Commit the batch:\n    // console.log(`[batchSync] START:\n    //   ${Object.keys(updates).length} updates,\n    //   ${deletions.length} deletions,\n    //   ${inserts.length} inserts`\n    // )\n    dispatch('_startPatching')\n    state._sync.syncStack.debounceTimer = null\n    return new Promise((resolve, reject) => {\n      batch.commit()\n      .then(res => {\n        console.log(`[batchSync] RESOLVED:`, res, `\n          updates: `, Object.keys(updates).length ? updates : {}, `\n          deletions: `, deletions.length ? deletions : [], `\n          inserts: `, inserts.length ? inserts : []\n        )\n        let remainingSyncStack = Object.keys(state._sync.syncStack.updates).length\n          + state._sync.syncStack.deletions.length\n          + state._sync.syncStack.inserts.length\n        if (remainingSyncStack) { dispatch('batchSync') }\n        dispatch('_stopPatching')\n        return resolve()\n        // // Fetch the item if it was added as an Archived item:\n        // if (item.archived) {\n          //   get_ters.dbRef.doc(res.id).get()\n          //   .then(doc => {\n            //     let tempId = doc.data().id\n            //     let id = doc.id\n            //     let item = doc.data()\n            //     item.id = id\n            //     console.log('retrieved Archived new item: ', id, item)\n            //     dispatch('newItemFromServer', {item, tempId})\n            //   })\n            // }\n      }).catch(error => {\n        state._sync.patching = 'error'\n        state._sync.syncStack.debounceTimer = null\n        return reject()\n      })\n    })\n  },\n  fetch (\n    {state, getters, commit, dispatch},\n    {whereFilters = [], orderBy = []} = {whereFilters: [], orderBy: []}\n    // whereFilters: [['archived', '==', true]]\n    // orderBy: ['done_date', 'desc']\n  ) {\n    return new Promise((resolve, reject) => {\n      console.log('[fetch] starting')\n      if (!getters.signedIn) return resolve()\n      const identifier = JSON.stringify({whereFilters, orderBy})\n      const fetched = state._sync.fetched[identifier]\n      // We've never fetched this before:\n      if (!fetched) {\n        let ref = getters.dbRef\n        // apply where filters and orderBy\n        whereFilters.forEach(paramsArr => {\n          ref = ref.where(...paramsArr)\n        })\n        if (orderBy.length) {\n          ref = ref.orderBy(...orderBy)\n        }\n        state._sync.fetched[identifier] = {\n          ref,\n          done: false,\n          retrievedFetchRefs: [],\n          nextFetchRef: null\n        }\n      }\n      const fRequest = state._sync.fetched[identifier]\n      // We're already done fetching everything:\n      if (fRequest.done) {\n        console.log('done fetching')\n        return resolve('fetchedAll')\n      }\n      // attach fetch filters\n      let fRef = state._sync.fetched[identifier].ref\n      if (fRequest.nextFetchRef) {\n        // get next ref if saved in state\n        fRef = state._sync.fetched[identifier].nextFetchRef\n      }\n      fRef = fRef.limit(state._conf.fetch.docLimit)\n      // Stop if all records already fetched\n      if (fRequest.retrievedFetchRefs.includes(fRef)) {\n        console.log('Already retrieved this part.')\n        return resolve()\n      }\n      // make fetch request\n      fRef.get()\n      .then(querySnapshot => {\n        const docs = querySnapshot.docs\n        if (docs.length === 0) {\n          state._sync.fetched[identifier].done = true\n          resolve('fetchedAll')\n\n          return\n        }\n        if (docs.length < state._conf.fetch.docLimit) {\n          state._sync.fetched[identifier].done = true\n        }\n        state._sync.fetched[identifier].retrievedFetchRefs.push(fetchRef)\n        // Get the last visible document\n        resolve(querySnapshot)\n        const lastVisible = docs[docs.length - 1]\n        // get the next records.\n        const next = fRef.startAfter(lastVisible)\n        state._sync.fetched[identifier].nextFetchRef = next\n      }).catch(error => {\n        console.log(error)\n        return reject(error)\n      })\n    })\n  },\n  serverUpdate ({commit}, {change, id, doc = {}}) {\n    doc.id = id\n    switch (change) {\n      case 'added':\n        commit('INSERT_DOC', doc)\n        break\n      case 'removed':\n        commit('DELETE_DOC', id)\n        break\n      default:\n        commit('PATCH_DOC', doc)\n        break\n    }\n  },\n  openDBChannel ({getters, state, commit, dispatch}) {\n    const store = this\n    if (Firebase.auth().currentUser) state._sync.signedIn = true\n    const collectionMode = getters.collectionMode\n    let dbRef = getters.dbRef\n    // apply where filters and orderBy\n    if (state._conf.firestoreRefType.toLowerCase() !== 'doc') {\n      state._conf.sync.where.forEach(paramsArr => {\n        dbRef = dbRef.where(...paramsArr)\n      })\n      if (state._conf.sync.orderBy.length) {\n        dbRef = dbRef.orderBy(...state._conf.sync.orderBy)\n      }\n    }\n    // define handleDoc()\n    function handleDoc (change, id, doc, source) {\n      change = (!change) ? 'modified' : change.type\n      // define storeUpdateFn()\n      function storeUpdateFn (_doc) {\n        return dispatch('serverUpdate', {change, id, doc: _doc})\n      }\n      // get user set sync hook function\n      const syncHookFn = state._conf.serverChange[change + 'Hook']\n      if (syncHookFn) {\n        syncHookFn(storeUpdateFn, doc, id, store, source, change)\n      } else {\n        storeUpdateFn(doc)\n      }\n    }\n    // make a promise\n    return new Promise ((resolve, reject) => {\n      dbRef\n      .onSnapshot(querySnapshot => {\n        let source = querySnapshot.metadata.hasPendingWrites ? 'local' : 'server'\n        if (!collectionMode) {\n          const doc = setDefaultValues(querySnapshot.data(), state._conf.serverChange.defaultValues)\n          if (source === 'local') return resolve()\n          handleDoc(null, null, doc, source)\n          return resolve()\n        }\n        querySnapshot.docChanges().forEach(change => {\n          // Don't do anything for local modifications & removals\n          if (source === 'local' &&\n            (change.type === 'modified' || change.type === 'removed')\n          ) {\n            return resolve()\n          }\n          const id = change.doc.id\n          const doc = (change.type === 'added')\n            ? setDefaultValues(change.doc.data(), state._conf.serverChange.defaultValues)\n            : change.doc.data()\n          handleDoc(change, id, doc, source)\n          return resolve()\n        })\n      }, error => {\n        state._sync.patching = 'error'\n        return reject(error)\n      })\n    })\n  },\n  set ({commit, dispatch, getters, state}, doc) {\n    if (!doc) return\n    if (!getters.collectionMode) {\n      return dispatch('patch', doc)\n    }\n    if (\n      !doc.id ||\n      (!state._conf.statePropName && !state[doc.id]) ||\n      (state._conf.statePropName && !state[state._conf.statePropName][doc.id])\n    ) {\n      return dispatch('insert', doc)\n    }\n    return dispatch('patch', doc)\n  },\n  insert ({state, getters, commit, dispatch}, doc) {\n    const store = this\n    if (!doc) return\n    if (!doc.id) doc.id = getters.dbRef.doc().id\n    // define the store update\n    function storeUpdateFn (_doc) {\n      commit('INSERT_DOC', _doc)\n      return dispatch('insertDoc', _doc)\n    }\n    // check for hooks\n    if (state._conf.sync.insertHook) {\n      return state._conf.sync.insertHook(storeUpdateFn, doc, store)\n    }\n    return storeUpdateFn(doc)\n  },\n  patch ({state, getters, commit, dispatch}, doc) {\n    const store = this\n    if (!doc) return\n    if (!doc.id && getters.collectionMode) return\n    // define the store update\n    function storeUpdateFn (_doc) {\n      commit('PATCH_DOC', _doc)\n      return dispatch('patchDoc', {id: _doc.id, doc: _doc})\n    }\n    // check for hooks\n    if (state._conf.sync.patchHook) {\n      return state._conf.sync.patchHook(storeUpdateFn, doc, store)\n    }\n    return storeUpdateFn(doc)\n  },\n  patchBatch (\n    {state, getters, commit, dispatch},\n    {doc, ids = []}\n  ) {\n    const store = this\n    if (!doc) return\n    // define the store update\n    function storeUpdateFn (_doc) {\n      commit('PATCH_DOC', _doc)\n      return dispatch('patchDoc', {ids, doc: _doc})\n    }\n    // check for hooks\n    if (state._conf.sync.patchHook) {\n      return state._conf.sync.patchHook(storeUpdateFn, doc, store)\n    }\n    return storeUpdateFn(doc)\n  },\n  delete ({state, getters, commit, dispatch}, id) {\n    const store = this\n    // define the store update\n    function storeUpdateFn (_id) {\n      commit('DELETE_DOC', _id)\n      return dispatch('deleteDoc', _id)\n    }\n    // check for hooks\n    if (state._conf.sync.deleteHook) {\n      return state._conf.sync.deleteHook(storeUpdateFn, id, store)\n    }\n    return storeUpdateFn(id)\n  },\n  _stopPatching ({state, commit}) {\n    if (state._sync.stopPatchingTimeout) { clearTimeout(state._sync.stopPatchingTimeout) }\n    state._sync.stopPatchingTimeout = setTimeout(_ => { state._sync.patching = false }, 300)\n  },\n  _startPatching ({state, commit}) {\n    if (state._sync.stopPatchingTimeout) { clearTimeout(state._sync.stopPatchingTimeout) }\n    state._sync.patching = true\n  }\n}\n\nexport default function (userActions = {}) {\n  return Object.assign({}, actions, userActions)\n}\n","\nimport { isObject } from 'is-what'\n/**\n * Checks all props of an object and deletes guarded and non-fillables.\n *\n * @param {object}  obj       the target object to check\n * @param {array}   fillables an array of strings, with the props which should be allowed on returned object\n * @param {array}   guard     an array of strings, with the props which should NOT be allowed on returned object\n *\n * @returns {object} the cleaned object after deleting guard and non-fillables\n */\nexport default function (obj, fillables = [], guard = []) {\n  if (!isObject(obj)) return obj\n  if (fillables.length) {\n    Object.keys(obj).forEach(key => {\n      if (!fillables.includes(key)) {\n        delete obj[key]\n      }\n    })\n  }\n  guard.forEach(key => {\n    delete obj[key]\n  })\n  return obj\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport copyObj from '../utils/copyObj'\nimport { getDeepRef } from 'vuex-easy-access'\nimport checkFillables from '../utils/checkFillables'\n\nconst getters = {\n  signedIn: (state, getters, rootState, rootGetters) => {\n    return state._sync.signedIn\n  },\n  dbRef: (state, getters, rootState, rootGetters) => {\n    if (!getters.signedIn) return false\n    if (!Firebase.auth().currentUser) return false\n    const userId = Firebase.auth().currentUser.uid\n    const path = state._conf.firestorePath.replace('{userId}', userId)\n    return (state._conf.firestoreRefType.toLowerCase() === 'collection')\n      ? Firebase.firestore().collection(path)\n      : Firebase.firestore().doc(path)\n  },\n  storeRef: (state, getters, rootState) => {\n    const path = (state._conf.statePropName)\n      ? `${state._conf.moduleName}/${state._conf.statePropName}`\n      : state._conf.moduleName\n    return getDeepRef(rootState, path)\n  },\n  collectionMode: (state, getters, rootState) => {\n    return (state._conf.firestoreRefType.toLowerCase() === 'collection')\n  },\n  prepareForPatch: (state, getters, rootState, rootGetters) =>\n  (ids = [], doc = {}) => {\n    // get relevant data from the storeRef\n    const collectionMode = getters.collectionMode\n    if (!collectionMode) ids.push('singleDoc')\n    // returns {object} -> {id: data}\n    return ids.reduce((carry, id) => {\n      let patchData = {}\n      // retrieve full object\n      if (!Object.keys(doc).length) {\n        patchData = (collectionMode)\n          ? getters.storeRef[id]\n          : getters.storeRef\n      } else {\n        patchData = doc\n      }\n      patchData = copyObj(patchData)\n      patchData = checkFillables(patchData, state._conf.sync.fillables, state._conf.sync.guard)\n      patchData.updated_at = Firebase.firestore.FieldValue.serverTimestamp()\n      carry[id] = patchData\n      return carry\n    }, {})\n  },\n  prepareForDeletion: (state, getters, rootState, rootGetters) =>\n  (ids = []) => {\n    return ids.reduce((carry, id) => {\n      carry.push(id)\n      return carry\n    }, [])\n  },\n  prepareForInsert: (state, getters, rootState, rootGetters) =>\n  (items = []) => {\n    items = copyObj(items)\n    return items.reduce((carry, item) => {\n      item = checkFillables(item, state._conf.sync.fillables, state._conf.sync.guard)\n      item.created_at = Firebase.firestore.FieldValue.serverTimestamp()\n      item.created_by = rootGetters['user/id']\n      carry.push(item)\n      return carry\n    }, [])\n  }\n}\n\nexport default function (userGetters = {}) {\n  return Object.assign({}, getters, userGetters)\n}\n","\nexport default function errorCheck (config) {\n  let reqProps = ['firestorePath', 'moduleName']\n  reqProps.forEach(prop => {\n    if (!config[prop]) {\n      console.error(`Missing ${prop} from your config!`)\n      return false\n    }\n  })\n  if (/(\\.|\\/)/.test(config.statePropName)) {\n    console.error(`statePropName must only include letters from [a-z]`)\n    return false\n  }\n  if (/\\./.test(config.moduleName)) {\n    console.error(`moduleName must only include letters from [a-z] and forward slashes '/'`)\n    return false\n  }\n  return true\n}\n","import merge from '../utils/deepmerge'\n// store\nimport defaultConfig from './defaultConfig'\nimport initialState from './state'\nimport iniMutations from './mutations'\nimport iniActions from './actions'\nimport iniGetters from './getters'\nimport errorCheck from './errorCheck'\n\n/**\n * A function that returns a vuex module object with seamless 2-way sync for firestore.\n *\n * @param {object} userConfig Takes a config object as per ...\n * @returns {object} the module ready to be included in your vuex store\n */\nexport default function (userConfig) {\n  const conf = merge(defaultConfig, userConfig)\n  if (!errorCheck(conf)) return\n  const userState = conf.state\n  const userMutations = conf.mutations\n  const userActions = conf.actions\n  const userGetters = conf.getters\n  delete conf.state\n  delete conf.mutations\n  delete conf.actions\n  delete conf.getters\n\n  const docContainer = {}\n  if (conf.statePropName) docContainer[conf.statePropName] = {}\n  const state = merge(initialState, userState, docContainer, {_conf: conf})\n  return {\n    namespaced: true,\n    state,\n    mutations: iniMutations(userMutations, merge(initialState, userState)),\n    actions: iniActions(userActions),\n    getters: iniGetters(userGetters)\n  }\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { getKeysFromPath } from 'vuex-easy-access'\nimport { isArray } from 'is-what'\nimport iniModule from './module/index'\n\nexport default function createEasyFirestore (userConfig) {\n  return store => {\n    // Get an array of config files\n    if (!isArray(userConfig)) userConfig = [userConfig]\n    // Create a module for each config file\n    userConfig.forEach(config => {\n      const moduleName = getKeysFromPath(config.moduleName)\n      store.registerModule(moduleName, iniModule(config))\n    })\n    store.setDoc = (path, payload) => {\n      return store.dispatch(path + '/setDoc', payload)\n    }\n    store.insert = (path, payload) => {\n      return store.dispatch(path + '/insert', payload)\n    }\n    store.patch = (path, payload) => {\n      return store.dispatch(path + '/patch', payload)\n    }\n    store.patchBatch = (path, payload) => {\n      return store.dispatch(path + '/patchBatch', payload)\n    }\n    store.delete = (path, payload) => {\n      return store.dispatch(path + '/delete', payload)\n    }\n  }\n}\n"],"names":["nanoclone","require","default","toArray","object","result","i","length","push","types","el","type","merger","a","b","keys","Object","concat","forEach","key","Array","isArray","Math","max","merge","config","strategy","determineType","is","name","elements","arguments","reduceRight","element","wrapper","args","apply","l","item","isObject","error","deepmerge","updateStore","doc","store","id","source","change","mutations","state","_sync","syncStack","_conf","firestoreRefType","toLowerCase","statePropName","_vm","$set","newVal","undefined","docRef","$delete","userMutations","assign","copyObj","obj","newObj","prototype","toString","call","JSON","parse","stringify","len","hasOwnProperty","defaultValues","ms","startTime","Date","now","done","Promise","resolve","reject","interval","setInterval","deltaT","refresh","retrievePaths","path","reduce","carry","pathUntilNow","newPath","extra","actions","getters","commit","dispatch","ids","console","log","syncStackItems","prepareForPatch","updates","syncStackIds","prepareForDeletion","deletions","docs","prepareForInsert","inserts","signedIn","debounceTimer","startDebounce","then","collectionMode","dbRef","batch","Firebase","firestore","count","updatesOriginal","map","fields","k","updatesOK","slice","updatesLeft","flattenToPaths","update","deletionsAmount","deletionsOK","deletionsLeft","delete","insertsAmount","insertsOK","insertsLeft","newRef","set","res","remainingSyncStack","catch","patching","whereFilters","orderBy","identifier","fetched","ref","where","paramsArr","fRequest","fRef","nextFetchRef","limit","fetch","docLimit","retrievedFetchRefs","includes","get","querySnapshot","fetchRef","lastVisible","next","startAfter","auth","currentUser","sync","handleDoc","storeUpdateFn","_doc","syncHookFn","serverChange","onSnapshot","metadata","hasPendingWrites","setDefaultValues","data","docChanges","insertHook","patchHook","_id","deleteHook","stopPatchingTimeout","setTimeout","userActions","fillables","guard","rootState","rootGetters","userId","uid","firestorePath","replace","collection","moduleName","getDeepRef","patchData","storeRef","checkFillables","updated_at","FieldValue","serverTimestamp","items","created_at","created_by","userGetters","errorCheck","reqProps","prop","test","userConfig","conf","defaultConfig","userState","docContainer","initialState","iniMutations","iniActions","iniGetters","createEasyFirestore","getKeysFromPath","registerModule","iniModule","setDoc","payload","insert","patch","patchBatch"],"mappings":"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"}