{"version":3,"file":"index.iife.js","sources":["../node_modules/deepmerge/dist/es.js","../src/utils/deepmerge.js","../src/module/defaultConfig.js","../src/module/state.js","../src/module/mutations.js","../src/utils/copyObj.js","../src/utils/setDefaultValues.js","../src/utils/debounceHelper.js","../src/module/actions.js","../src/utils/checkFillables.js","../src/module/getters.js","../src/module/errorCheck.js","../src/module/index.js","../src/index.js"],"sourcesContent":["var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","import deepmerge from 'deepmerge'\n// import deepmerge from '../../node_modules/deepmerge/dist/es.js'\n\n/**\n * Makes sure to overwrite arrays completely instead of concatenating with a merge(). Usage: merge(arr1, arr2, {arrayOverwrite: true})\n *\n * @returns the latter array passed\n */\nfunction overwriteMerge (destinationArray, sourceArray, options) {\n  return sourceArray\n}\n\nfunction merge (a, b, options) {\n  if (options && options.arrayOverwrite) {\n    return deepmerge(a, b, {arrayMerge: overwriteMerge})\n  }\n  return deepmerge(a, b)\n}\n\nmerge.all = function (array, options) {\n  if (options && options.arrayOverwrite) {\n    return deepmerge.all(array, {arrayMerge: overwriteMerge})\n  }\n  return deepmerge.all(array)\n}\n\nexport default merge\n","\n/**\n * A function executed during the 2 way sync when docs are added/modified/deleted. NEEDS TO EXECUTE FIRST PARAM! You can use this function to do a conditional check on the documents to decide if/when to execute the store update.\n *\n * @param {function} storeUpdateFn this is the function that will make changes to your vuex store. Takes no params.\n * @param {object} store the store for usage with `store.dispatch`, `store.commit`, `store.getters` etc.\n * @param {string} id the doc id returned in `change.doc.id` (see firestore documentation for more info)\n * @param {object} doc the doc returned in `change.doc.data()` (see firestore documentation for more info)\n * @param {string} source of the change. Can be 'local' or 'server'\n */\nfunction syncHook (storeUpdateFn, store, id, doc, source, change) {\n  // throw error if you want to stop the document in your store from being modified\n  // do some stuff\n  storeUpdateFn()\n  // do some stuff\n}\n\nexport default {\n  moduleNameSpace: 'firestore',\n  // this is the vuex module path that will be created\n  docsStateProp: '',\n  // this is the state property where your docs will end up inside the module\n  // when not set your doc's props will be set directly to your vuex module's state\n  firestorePath: '',\n  // this is the firestore collection path to your documents. You can use `{userId}` which will be replaced with `Firebase.auth().uid`\n  firestoreRefType: 'collection', // or 'doc'\n  // depending if what you want to sync is a whole collection or a single doc\n  vuexUserPath: '',\n  // the path where your firebase user gets saved in vuex. Required to be able to have reactivity after login.\n  sync: {\n    type: '2way',\n    // '2way' only ('read only' not yet integrated)\n    where: [], // only applicable on 'collection'\n    orderBy: [], // only applicable on 'collection'\n    defaultValues: {},\n    // About defaultValues:\n    // These are the default properties that will be set on each doc that's synced to the store or comes out of the store.\n    // You HAVE to set all props you want to be reactive on beforehand!\n    // These values are only set when you have items who don't have the props defined in defaultValues upon retrieval\n    // The retrieved document will be deep merged on top of these default values\n    added: syncHook,\n    modified: syncHook,\n    removed: syncHook,\n    // see the syncHook function above to see what you can do\n    // for firestoreRefType: 'doc' only use 'modified' syncHook\n  },\n  fetch: {\n    docLimit: 50, // defaults to 50\n  },\n  insert: {\n    checkCondition: null,\n    // A function where you can check something and force stopping the operation if you return `false`\n    // Eg. checkCondition (doc, docs) { return (doc.something != 'something') },\n    fillables: [],\n    guard: [],\n  },\n  patch: {\n    checkCondition: null,\n    // A function where you can check something and force stopping the operation if you return `false`\n    // Eg. checkCondition (id, fields, docs) { return (doc.something != 'something') },\n    fillables: [],\n    guard: [],\n  },\n  delete: {\n    checkCondition: null,\n    // A function where you can check something and force stopping the operation if you return `false`\n    // Eg. checkCondition (id, docs) { return (doc.something != 'something') },\n  }\n}\n","\nexport default {\n  // user: null,\n  syncStack: {\n    updates: {},\n    deletions: [],\n    inserts: [],\n    debounceTimer: null\n  },\n  retrievedFetchRefs: [],\n  nextFetchRef: null,\n  patching: false,\n  doneFetching: false,\n  stopPatchingTimeout: null,\n}\n","import { defaultMutations } from 'vuex-easy-access'\nimport { isObject } from 'is-what'\nimport merge from '../utils/deepmerge'\n\nconst mutations = {\n  resetSyncStack (state) {\n    state.syncStack = {\n      updates: {},\n      deletions: [],\n      inserts: [],\n      debounceTimer: null\n    }\n  },\n  INSERT_DOC (state, doc) {\n    if (state.firestoreRefType.toLowerCase() === 'doc') return\n    this._vm.$set(state[state.docsStateProp], doc.id, doc)\n  },\n  PATCH_DOC (state, doc) {\n    if (state.firestoreRefType.toLowerCase() === 'doc') {\n      if (!state.docsStateProp) {\n        return Object.keys(doc).forEach(key => {\n          // Merge if exists\n          const newVal = (state[key] === undefined)\n            ? doc[key]\n            : (!isObject(state[key]) || !isObject(doc[key]))\n              ? doc[key]\n              : merge(state[key], doc[key], {arrayOverwrite: true})\n          this._vm.$set(state, key, newVal)\n        })\n      }\n      // state[state.docsStateProp] will always be an empty object by default\n      state[state.docsStateProp] = merge(\n        state[state.docsStateProp],\n        doc,\n        {arrayOverwrite: true}\n      )\n      return\n    }\n    // Merge if exists\n    const newVal = (state[state.docsStateProp][doc.id] === undefined)\n      ? doc\n      : (!isObject(state[state.docsStateProp][doc.id]) || !isObject(doc))\n        ? doc\n        : merge(state[state.docsStateProp][doc.id], doc, {arrayOverwrite: true})\n    this._vm.$set(state[state.docsStateProp], doc.id, newVal)\n  },\n  DELETE_DOC (state, id) {\n    if (state.firestoreRefType.toLowerCase() === 'doc') return\n    this._vm.$delete(state[state.docsStateProp], id)\n  }\n}\n\nexport default function (userMutations = {}, state) {\n  const vuexEasyMutations = defaultMutations(state)\n  return Object.assign({}, vuexEasyMutations, mutations, userMutations)\n}\n","/**\n * copyObj helper\n *\n * @author     Adam Dorling\n * @contact    https://codepen.io/naito\n */\nexport default function copyObj (obj) {\n  let newObj\n  if (typeof obj != 'object') {\n    return obj\n  }\n  if (!obj) {\n    return obj\n  }\n  if ('[object Object]' !== Object.prototype.toString.call(obj) ||\n    '[object Array]' !== Object.prototype.toString.call(obj)\n  ) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n  // Object is an Array\n  if ('[object Array]' === Object.prototype.toString.call(obj)) {\n    newObj = []\n    for (let i = 0, len = obj.length; i < len; i++) {\n      newObj[i] = copyObj(obj[i])\n    }\n    return newObj\n  }\n  // Object is an Object\n  newObj = {}\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      newObj[i] = copyObj(obj[i])\n    }\n  }\n  return newObj\n}\n","import merge from './deepmerge'\n\n/**\n * Sets default values on an object\n *\n * @param {object} obj on which to set the default values\n * @param {object} defaultValues the default values\n */\nexport default function (obj, defaultValues) {\n  return merge(defaultValues, obj, {arrayOverwrite: true})\n}\n","/**\n * debounce helper\n *\n * @author     Adam Dorling\n * @contact    https://codepen.io/naito\n */\n\n// USAGE:\n// let d = startDebounce(1000)\n// d.done.then(_ => handle())\n// d.refresh() // to refresh\n\nexport default function (ms) {\n  let startTime = Date.now()\n  const done = new Promise((resolve, reject) => {\n    const interval = setInterval(_ => {\n      const now = Date.now()\n      const deltaT = now - startTime\n      if (deltaT >= ms) {\n        clearInterval(interval)\n        resolve(true)\n      }\n    }, 10)\n  })\n  const refresh = () => (startTime = Date.now())\n  return { done, refresh }\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport { isArray, isString } from 'is-what'\nimport merge from '../utils/deepmerge'\nimport copyObj from '../utils/copyObj'\nimport setDefaultValues from '../utils/setDefaultValues'\nimport startDebounce from '../utils/debounceHelper'\n\nconst actions = {\n  patchDoc (\n    {state, getters, commit, dispatch},\n    {id = '', ids = [], field = '', fields = []} = {ids: [], fields: []}\n  ) {\n    // 0. payload correction (only arrays)\n    if (!isArray(ids) || !isArray(fields)) return console.log('ids, fields need to be arrays')\n    if (!isString(field)) return console.log('field needs to be a string')\n    if (id) ids.push(id)\n    if (field) fields.push(field)\n\n    // 1. Prepare for patching\n    let syncStackItems = getters.prepareForPatch(ids, fields)\n\n    // 2. Push to syncStack\n    Object.keys(syncStackItems).forEach(id => {\n      const newVal = (!state.syncStack.updates[id])\n        ? syncStackItems[id]\n        : merge(\n            state.syncStack.updates[id],\n            syncStackItems[id],\n            {arrayOverwrite: true}\n          )\n      state.syncStack.updates[id] = newVal\n    })\n\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  deleteDoc ({state, getters, commit, dispatch},\n  ids = []) {\n    // 0. payload correction (only arrays)\n    if (!isArray(ids)) ids = [ids]\n\n    // 1. Prepare for patching\n    const syncStackIds = getters.prepareForDeletion(ids)\n\n    // 2. Push to syncStack\n    const deletions = state.syncStack.deletions.concat(syncStackIds)\n    commit('SET_SYNCSTACK.DELETIONS', deletions)\n\n    if (!state.syncStack.deletions.length) return\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  insertDoc ({state, getters, commit, dispatch},\n  docs = []) {\n    // 0. payload correction (only arrays)\n    if (!isArray(docs)) docs = [docs]\n\n    // 1. Prepare for patching\n    const syncStack = getters.prepareForInsert(docs)\n\n    // 2. Push to syncStack\n    const inserts = state.syncStack.inserts.concat(syncStack)\n    commit('SET_SYNCSTACK.INSERTS', inserts)\n\n    // 3. Create or refresh debounce\n    return dispatch('handleSyncStackDebounce')\n  },\n  handleSyncStackDebounce ({state, commit, dispatch, getters}) {\n    if (!getters.signedIn) return false\n    if (!state.syncStack.debounceTimer) {\n      const debounceTimer = startDebounce(1000)\n      debounceTimer.done.then(_ => dispatch('batchSync'))\n      commit('SET_SYNCSTACK.DEBOUNCETIMER', debounceTimer)\n    }\n    state.syncStack.debounceTimer.refresh()\n  },\n  batchSync ({getters, commit, dispatch, state}) {\n    const collectionMode = getters.collectionMode\n    const dbRef = getters.dbRef\n    let batch = Firebase.firestore().batch()\n    let count = 0\n    // Add 'updateds' to batch\n    let updatesOriginal = copyObj(state.syncStack.updates)\n    let updates = Object.keys(updatesOriginal).map(k => {\n      let fields = updatesOriginal[k]\n      return {id: k, fields}\n    })\n    // Check if there are more than 500 batch items already\n    if (updates.length >= 500) {\n      // Batch supports only until 500 items\n      count = 500\n      let updatesOK = updates.slice(0, 500)\n      let updatesLeft = updates.slice(500, -1)\n      // Put back the remaining items over 500\n      state.syncStack.updates = updatesLeft.reduce((carry, item) => {\n        carry[item.id] = item\n        delete item.id\n        return carry\n      }, {})\n      updates = updatesOK\n    } else {\n      state.syncStack.updates = {}\n      count = updates.length\n    }\n    // Add to batch\n    updates.forEach(item => {\n      let id = item.id\n      let docRef = (collectionMode) ? dbRef.doc(id) : dbRef\n      let fields = item.fields\n      batch.update(docRef, fields)\n    })\n    // Add 'deletions' to batch\n    let deletions = copyObj(state.syncStack.deletions)\n    // Check if there are more than 500 batch items already\n    if (count >= 500) {\n      // already at 500 or more, leave items in syncstack, and don't add anything to batch\n      deletions = []\n    } else {\n      // Batch supports only until 500 items\n      let deletionsAmount = 500 - count\n      let deletionsOK = deletions.slice(0, deletionsAmount)\n      let deletionsLeft = deletions.slice(deletionsAmount, -1)\n      // Put back the remaining items over 500\n      commit('SET_SYNCSTACK.DELETIONS', deletionsLeft)\n      count = count + deletionsOK.length\n      // Define the items we'll add below\n      deletions = deletionsOK\n    }\n    // Add to batch\n    deletions.forEach(id => {\n      let docRef = dbRef.doc(id)\n      batch.delete(docRef)\n    })\n    // Add 'inserts' to batch\n    let inserts = copyObj(state.syncStack.inserts)\n    // Check if there are more than 500 batch items already\n    if (count >= 500) {\n      // already at 500 or more, leave items in syncstack, and don't add anything to batch\n      inserts = []\n    } else {\n      // Batch supports only until 500 items\n      let insertsAmount = 500 - count\n      let insertsOK = inserts.slice(0, insertsAmount)\n      let insertsLeft = inserts.slice(insertsAmount, -1)\n      // Put back the remaining items over 500\n      commit('SET_SYNCSTACK.INSERTS', insertsLeft)\n      count = count + insertsOK.length\n      // Define the items we'll add below\n      inserts = insertsOK\n    }\n    // Add to batch\n    inserts.forEach(item => {\n      let newRef = getters.dbRef.doc(item.id)\n      batch.set(newRef, item)\n    })\n    // Commit the batch:\n    // console.log(`[batchSync] START:\n    //   ${Object.keys(updates).length} updates,\n    //   ${deletions.length} deletions,\n    //   ${inserts.length} inserts`\n    // )\n    dispatch('_startPatching')\n    commit('SET_SYNCSTACK.DEBOUNCETIMER', null)\n    return new Promise((resolve, reject) => {\n      batch.commit()\n      .then(res => {\n        console.log(`[batchSync] RESOLVED:`, res, `\n          updates: `, Object.keys(updates).length ? updates : {}, `\n          deletions: `, deletions.length ? deletions : [], `\n          inserts: `, inserts.length ? inserts : []\n        )\n        let remainingSyncStack = Object.keys(state.syncStack.updates).length\n          + state.syncStack.deletions.length\n          + state.syncStack.inserts.length\n        if (remainingSyncStack) { dispatch('batchSync') }\n        dispatch('_stopPatching')\n        return resolve()\n        // // Fetch the item if it was added as an Archived item:\n        // if (item.archived) {\n          //   get_ters.dbRef.doc(res.id).get()\n          //   .then(doc => {\n            //     let tempId = doc.data().id\n            //     let id = doc.id\n            //     let item = doc.data()\n            //     item.id = id\n            //     console.log('retrieved Archived new item: ', id, item)\n            //     dispatch('newItemFromServer', {item, tempId})\n            //   })\n            // }\n      }).catch(error => {\n        commit('SET_PATCHING', 'error')\n        commit('SET_SYNCSTACK.DEBOUNCETIMER', null)\n        return reject()\n      })\n    })\n  },\n  fetch (\n    {state, getters, commit},\n    {whereFilters = [], orderBy = []} = {whereFilters: [], orderBy: []}\n    // whereFilters: [['archived', '==', true]]\n    // orderBy: ['done_date', 'desc']\n  ) {\n    return new Promise((resolve, reject) => {\n      console.log('[fetch] starting')\n      if (!getters.signedIn) return resolve()\n      if (state.doneFetching) {\n        console.log('done fetching')\n        return resolve('fetchedAll')\n      }\n      // attach fetch filters\n      let fetchRef\n      if (state.nextFetchRef) {\n        // get next ref if saved in state\n        fetchRef = state.nextFetchRef\n      } else {\n        // apply where filters and orderBy\n        fetchRef = getters.dbRef\n        whereFilters.forEach(paramsArr => {\n          fetchRef = fetchRef.where(...paramsArr)\n        })\n        if (orderBy.length) {\n          fetchRef = fetchRef.orderBy(...orderBy)\n        }\n      }\n      fetchRef = fetchRef.limit(state.fetch.docLimit)\n      // Stop if all records already fetched\n      if (state.retrievedFetchRefs.includes(fetchRef)) {\n        console.log('Already retrieved this part.')\n        return resolve()\n      }\n      // make fetch request\n      fetchRef.get()\n      .then(querySnapshot => {\n        const docs = querySnapshot.docs\n        if (docs.length === 0) {\n          commit('SET_DONEFETCHING', true)\n          return resolve('fetchedAll')\n        }\n        if (docs.length < state.fetch.docLimit) {\n          commit('SET_DONEFETCHING', true)\n        }\n        commit('PUSH_RETRIEVEDFETCHREFS', fetchRef)\n        // Get the last visible document\n        resolve(querySnapshot)\n        const lastVisible = docs[docs.length - 1]\n        // get the next records.\n        const next = fetchRef.startAfter(lastVisible)\n        commit('SET_NEXTFETCHREF', next)\n      }).catch(error => {\n        console.log(error)\n        return reject(error)\n      })\n    })\n  },\n  serverUpdate ({commit}, {change, id, doc = {}}) {\n    doc.id = id\n    switch (change) {\n      case 'added':\n        commit('INSERT_DOC', doc)\n        break\n      case 'removed':\n        commit('DELETE_DOC', id)\n        break\n      default:\n        commit('PATCH_DOC', doc)\n        break\n    }\n  },\n  openDBChannel ({getters, state, commit, dispatch}) {\n    const collectionMode = getters.collectionMode\n    let dbRef = getters.dbRef\n    // apply where filters and orderBy\n    if (state.firestoreRefType.toLowerCase() !== 'doc') {\n      state.sync.where.forEach(paramsArr => {\n        dbRef = dbRef.where(...paramsArr)\n      })\n      if (state.sync.orderBy.length) {\n        dbRef = dbRef.orderBy(...state.sync.orderBy)\n      }\n    }\n    // define handleDoc()\n    function handleDoc (change, id, doc, source) {\n      change = (!change) ? 'modified' : change.type\n      // define storeUpdateFn()\n      function storeUpdateFn () {\n        return dispatch('serverUpdate', {change, id, doc})\n      }\n      // get user set sync hook function\n      const syncHookFn = state.sync[change]\n      if (syncHookFn) {\n        syncHookFn(storeUpdateFn, this, id, doc, source)\n      } else {\n        storeUpdateFn()\n      }\n    }\n    // make a promise\n    return new Promise ((resolve, reject) => {\n      dbRef\n      .onSnapshot(querySnapshot => {\n        let source = querySnapshot.metadata.hasPendingWrites ? 'local' : 'server'\n        if (!collectionMode) {\n          const doc = setDefaultValues(querySnapshot.data(), state.sync.defaultValues)\n          if (source === 'local') return resolve()\n          handleDoc(null, null, doc, source)\n          return resolve()\n        }\n        querySnapshot.docChanges().forEach(change => {\n          // Don't do anything for local modifications & removals\n          if (source === 'local' &&\n            (change.type === 'modified' || change.type === 'removed')\n          ) {\n            return resolve()\n          }\n          const id = change.doc.id\n          const doc = (change.type === 'added')\n            ? setDefaultValues(change.doc.data(), state.sync.defaultValues)\n            : change.doc.data()\n          handleDoc(change, id, doc, source)\n          return resolve()\n        })\n      }, error => {\n        commit('SET_PATCHING', 'error')\n        return reject(error)\n      })\n    })\n  },\n  set ({commit, dispatch, getters, state}, doc) {\n    if (!doc) return\n    if (!getters.collectionMode) {\n      return dispatch('patch', doc)\n    }\n    if (!doc.id || !state[state.docsStateProp][doc.id]) {\n      return dispatch('insert', doc)\n    }\n    return dispatch('patch', doc)\n  },\n  insert ({commit, dispatch, getters}, doc) {\n    if (!doc) return\n    if (!doc.id) doc.id = getters.dbRef.doc().id\n    commit('INSERT_DOC', doc)\n    return dispatch('insertDoc', doc)\n  },\n  patch ({commit, state, dispatch, getters}, doc) {\n    if (!doc) return\n    if (!doc.id && getters.collectionMode) return\n    commit('PATCH_DOC', doc)\n    return dispatch('patchDoc', {id: doc.id, fields: Object.keys(doc)})\n  },\n  delete ({commit, dispatch, getters}, id) {\n    commit('DELETE_DOC', id)\n    return dispatch('deleteDoc', id)\n  },\n  _stopPatching ({state, commit}) {\n    if (state.stopPatchingTimeout) { clearTimeout(state.stopPatchingTimeout) }\n    state.stopPatchingTimeout = setTimeout(_ => { commit('SET_PATCHING', false) }, 300)\n  },\n  _startPatching ({state, commit}) {\n    if (state.stopPatchingTimeout) { clearTimeout(state.stopPatchingTimeout) }\n    commit('SET_PATCHING', true)\n  }\n}\n\nexport default function (userActions = {}) {\n  return Object.assign({}, actions, userActions)\n}\n","\nimport { isObject } from 'is-what'\n/**\n * Checks all props of an object and deletes guarded and non-fillables.\n *\n * @param {object}  obj       the target object to check\n * @param {array}   fillables an array of strings, with the props which should be allowed on returned object\n * @param {array}   guard     an array of strings, with the props which should NOT be allowed on returned object\n *\n * @returns {object} the cleaned object after deleting guard and non-fillables\n */\nexport default function (obj, fillables = [], guard = []) {\n  if (!isObject(obj)) return obj\n  if (fillables.length) {\n    Object.keys(obj).forEach(key => {\n      if (!fillables.includes(key)) {\n        delete obj[key]\n      }\n    })\n  }\n  guard.forEach(key => {\n    delete obj[key]\n  })\n  return obj\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport copyObj from '../utils/copyObj'\nimport { getDeepRef } from 'vuex-easy-access'\nimport checkFillables from '../utils/checkFillables'\n\nconst getters = {\n  signedIn: (state, getters, rootState, rootGetters) => {\n    const user = getDeepRef(rootState, state.vuexUserPath)\n    return (user !== null)\n  },\n  dbRef: (state, getters, rootState, rootGetters) => {\n    if (!getters.signedIn) return false\n    const userId = Firebase.auth().currentUser.uid\n    const path = state.firestorePath.replace('{userId}', userId)\n    return (state.firestoreRefType.toLowerCase() === 'collection')\n      ? Firebase.firestore().collection(path)\n      : Firebase.firestore().doc(path)\n  },\n  storeRef: (state, getters, rootState) => {\n    const path = (state.docsStateProp)\n      ? `${state.moduleNameSpace}/${state.docsStateProp}`\n      : state.moduleNameSpace\n    return getDeepRef(rootState, path)\n  },\n  collectionMode: (state, getters, rootState) => {\n    return (state.firestoreRefType.toLowerCase() === 'collection')\n  },\n  prepareForPatch: (state, getters, rootState, rootGetters) =>\n  (ids = [], fields = []) => {\n    // get relevant data from the storeRef\n    const collectionMode = getters.collectionMode\n    if (!collectionMode) ids.push('singleDoc')\n    // returns {object} -> {id: data}\n    return ids.reduce((carry, id) => {\n      // Accept an extra condition to check\n      const check = state.patch.checkCondition\n      if (check && !check(id, fields, getters.storeRef)) return carry\n\n      let patchData = {}\n      // Patch specific fields only\n      if (fields.length) {\n        fields.forEach(field => {\n          patchData[field] = (collectionMode)\n            ? getters.storeRef[id][field]\n            : getters.storeRef[field]\n        })\n      // Patch the whole item\n      } else {\n        patchData = (collectionMode)\n          ? copyObj(getters.storeRef[id])\n          : copyObj(getters.storeRef)\n        patchData = checkFillables(patchData, state.patch.fillables, state.patch.guard)\n      }\n      patchData.updated_at = Firebase.firestore.FieldValue.serverTimestamp()\n      carry[id] = patchData\n      return carry\n    }, {})\n  },\n  prepareForDeletion: (state, getters, rootState, rootGetters) =>\n  (ids = []) => {\n    return ids.reduce((carry, id) => {\n      // Accept an extra condition to check\n      let check = state.delete.checkCondition\n      if (check && !check(id, getters.storeRef)) return carry\n      carry.push(id)\n      return carry\n    }, [])\n  },\n  prepareForInsert: (state, getters, rootState, rootGetters) =>\n  (items = []) => {\n    items = copyObj(items)\n    return items.reduce((carry, item) => {\n      // Accept an extra condition to check\n      let check = state.insert.checkCondition\n      if (check && !check(item, getters.storeRef)) return carry\n\n      item = checkFillables(item, state.insert.fillables, state.insert.guard)\n      item.created_at = Firebase.firestore.FieldValue.serverTimestamp()\n      item.created_by = rootGetters['user/id']\n      carry.push(item)\n      return carry\n    }, [])\n  }\n}\n\nexport default function (userGetters = {}) {\n  return Object.assign({}, getters, userGetters)\n}\n","\nexport default function errorCheck (config) {\n  let reqProps = ['firestorePath', 'vuexUserPath']\n  reqProps.forEach(prop => {\n    console.error(`Missing ${prop} from your config!`)\n    return false\n  })\n  if (/(\\.|\\/)/.test(config.docsStateProp)) {\n    console.error(`docsStateProp must only include letters from [a-z]`)\n    return false\n  }\n  if (/\\./.test(config.moduleNameSpace)) {\n    console.error(`moduleNameSpace must only include letters from [a-z] and forward slashes '/'`)\n    return false\n  }\n  return true\n}\n","import merge from '../utils/deepmerge'\n// store\nimport defaultConfig from './defaultConfig'\nimport initialState from './state'\nimport iniMutations from './mutations'\nimport iniActions from './actions'\nimport iniGetters from './getters'\nimport errorCheck from './errorCheck'\n\nconst vuexBase = {state: null, mutations: null, actions: null, getters: null}\n\n/**\n * A function that returns a vuex module object with seamless 2-way sync for firestore.\n *\n * @param {object} userConfig Takes a config object as per ...\n * @returns {object} the module ready to be included in your vuex store\n */\nexport default function (userConfig) {\n  const conf = merge(vuexBase, userConfig, {arrayOverwrite: true})\n  if (!errorCheck(conf)) return\n  const userState = conf.state\n  const userMutations = conf.mutations\n  const userActions = conf.actions\n  const userGetters = conf.getters\n  delete conf.state\n  delete conf.mutations\n  delete conf.actions\n  delete conf.getters\n\n  const docContainer = {}\n  if (conf.docsStateProp) docContainer[conf.docsStateProp] = {}\n  const state = merge.all([initialState, defaultConfig, userState, conf, docContainer], {arrayOverwrite: true})\n\n  return {\n    namespaced: true,\n    state,\n    mutations: iniMutations(userMutations, merge(initialState, userState)),\n    actions: iniActions(userActions),\n    getters: iniGetters(userGetters)\n  }\n}\n","import Firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { getKeysFromPath } from 'vuex-easy-access'\nimport { isArray } from 'is-what'\nimport iniModule from './module/index'\n\nexport default function createEasyFirestore (userConfig) {\n  return store => {\n    // Get an array of config files\n    if (!isArray(userConfig)) userConfig = [userConfig]\n    // Create a module for each config file\n    userConfig.forEach(config => {\n      const moduleNameSpace = getKeysFromPath(config.moduleNameSpace)\n      store.registerModule(moduleNameSpace, iniModule(config))\n    })\n    store.setDoc = (path, payload) => {\n      return store.dispatch(path + '/setDoc', payload)\n    }\n    store.insert = (path, payload) => {\n      return store.dispatch(path + '/insert', payload)\n    }\n    store.patch = (path, payload) => {\n      return store.dispatch(path + '/patch', payload)\n    }\n    store.delete = (path, payload) => {\n      return store.dispatch(path + '/delete', payload)\n    }\n  }\n}\n"],"names":["overwriteMerge","destinationArray","sourceArray","options","merge","a","b","arrayOverwrite","deepmerge","arrayMerge","all","array","syncHook","storeUpdateFn","store","id","doc","source","change","moduleNameSpace","docsStateProp","firestorePath","firestoreRefType","vuexUserPath","sync","type","where","orderBy","defaultValues","added","modified","removed","fetch","docLimit","insert","checkCondition","fillables","guard","patch","delete","syncStack","updates","deletions","inserts","debounceTimer","retrievedFetchRefs","nextFetchRef","patching","doneFetching","stopPatchingTimeout","mutations","resetSyncStack","state","INSERT_DOC","toLowerCase","_vm","$set","PATCH_DOC","Object","keys","forEach","newVal","key","undefined","isObject","DELETE_DOC","$delete","userMutations","vuexEasyMutations","defaultMutations","assign","copyObj","obj","newObj","prototype","toString","call","JSON","parse","stringify","i","len","length","hasOwnProperty","ms","startTime","Date","now","done","Promise","resolve","reject","interval","setInterval","deltaT","clearInterval","refresh","actions","patchDoc","getters","commit","dispatch","ids","fields","field","isArray","console","log","isString","push","syncStackItems","prepareForPatch","deleteDoc","syncStackIds","prepareForDeletion","concat","insertDoc","docs","prepareForInsert","handleSyncStackDebounce","signedIn","startDebounce","then","batchSync","collectionMode","dbRef","batch","Firebase","firestore","count","updatesOriginal","map","k","updatesOK","slice","updatesLeft","reduce","carry","item","docRef","update","deletionsAmount","deletionsOK","deletionsLeft","insertsAmount","insertsOK","insertsLeft","newRef","set","res","remainingSyncStack","catch","whereFilters","fetchRef","paramsArr","limit","includes","get","querySnapshot","lastVisible","next","startAfter","error","serverUpdate","openDBChannel","handleDoc","syncHookFn","onSnapshot","metadata","hasPendingWrites","setDefaultValues","data","docChanges","_stopPatching","clearTimeout","setTimeout","_startPatching","userActions","rootState","rootGetters","user","getDeepRef","userId","auth","currentUser","uid","path","replace","collection","storeRef","check","patchData","checkFillables","updated_at","FieldValue","serverTimestamp","items","created_at","created_by","userGetters","errorCheck","config","reqProps","prop","test","vuexBase","userConfig","conf","userState","docContainer","initialState","defaultConfig","namespaced","iniMutations","iniActions","iniGetters","createEasyFirestore","getKeysFromPath","registerModule","iniModule","setDoc","payload"],"mappings":"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"}